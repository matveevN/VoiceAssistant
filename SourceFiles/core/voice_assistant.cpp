#include "voice_assistant.h"

namespace Core {
VoiceAssistant::VoiceAssistant() {
        _recognizer = std::make_unique<Speech::SpeechRecognizer>(
            "../../Resources/models/"
            "vosk-model-small-ru-0.22",
            "[\"алиса\", \"включить станок\", \"выключить станок\", \"подать "
            "масло\"]");
}

void VoiceAssistant::processCommand(const std::string& text) {
        _commandManager.process(text);
}

void VoiceAssistant::run() {
        const char* logo = R"(
 .+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+. 
(     /$$    /$$          /$$                                                                 )
 )   | $$   | $$         |__/                                                                ( 
(    | $$   | $$ /$$$$$$  /$$  /$$$$$$$  /$$$$$$                                              )
 )   |  $$ / $$//$$__  $$| $$ /$$_____/ /$$__  $$                                            ( 
(     \  $$ $$/| $$  \ $$| $$| $$      | $$$$$$$$                                             )
 )     \  $$$/ | $$  | $$| $$| $$      | $$_____/                                            ( 
(       \  $/  |  $$$$$$/| $$|  $$$$$$$|  $$$$$$$                                             )
 )       \_/    \______/ |__/ \_______/ \_______/                                            ( 
(                                                                                             )
 )                                                                                           ( 
(                                                                                             )
 )     /$$$$$$                     /$$             /$$                           /$$         ( 
(     /$$__  $$                   |__/            | $$                          | $$          )
 )   | $$  \ $$  /$$$$$$$ /$$$$$$$ /$$  /$$$$$$$ /$$$$$$    /$$$$$$  /$$$$$$$  /$$$$$$       ( 
(    | $$$$$$$$ /$$_____//$$_____/| $$ /$$_____/|_  $$_/   |____  $$| $$__  $$|_  $$_/        )
 )   | $$__  $$|  $$$$$$|  $$$$$$ | $$|  $$$$$$   | $$      /$$$$$$$| $$  \ $$  | $$         ( 
(    | $$  | $$ \____  $$\____  $$| $$ \____  $$  | $$ /$$ /$$__  $$| $$  | $$  | $$ /$$      )
 )   | $$  | $$ /$$$$$$$//$$$$$$$/| $$ /$$$$$$$/  |  $$$$/|  $$$$$$$| $$  | $$  |  $$$$/     ( 
(    |__/  |__/|_______/|_______/ |__/|_______/    \___/   \_______/|__/  |__/   \___/        )
 )                                                                                           ( 
(                                                                                             )
 "+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+"+.+" 
)";

        std::cout << logo;
        std::cout << "Голосовой помощник запущен\n";
        while (true) {
                auto text = _recognizer->listen();
                if (!text.empty()) {
                        processCommand(text);
                }
        }
}

} // namespace Core
